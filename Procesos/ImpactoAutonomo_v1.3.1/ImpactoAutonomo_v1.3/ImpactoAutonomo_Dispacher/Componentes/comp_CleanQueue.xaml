<Activity mc:Ignorable="sap sap2010" x:Class="Comp_CleanQueue" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_StrQueueName" Type="InArgument(x:String)" />
    <x:Property Name="in_StrQueueFolder" Type="InArgument(x:String)" />
    <x:Property Name="in_IntMaxQueueItems" Type="InArgument(x:Int32)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1224,1589.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Comp_CleanQueue_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="52">
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.InteropServices</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="56">
      <AssemblyReference>Microsoft.Bcl.AsyncInterfaces</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Cada vez que iniciamos el proceso borramos los datos que sigan en &quot;New&quot; para evitar duplicados" DisplayName="Comp_CleanQueue" sap:VirtualizedContainerService.HintSize="593.6,1524.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="scg:IEnumerable(ui:QueueItem)" Name="vQueueTransactionItem" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="531.2,108.8" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;START- Comp_CleanQueue&quot;]" />
    <ui:InterruptibleDoWhile CurrentIndex="{x:Null}" Condition="[vQueueTransactionItem.Count &gt; 0 and in_IntMaxQueueItems &gt; 0]" DisplayName="Do While" sap:VirtualizedContainerService.HintSize="531.2,1084" sap2010:WorkflowViewState.IdRef="InterruptibleDoWhile_1">
      <ui:InterruptibleDoWhile.Body>
        <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="496,916.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign sap:VirtualizedContainerService.HintSize="433.6,80.8" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">[in_IntMaxQueueItems]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">[in_IntMaxQueueItems - 1]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:GetQueueItems Priority="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="StartsWith" FolderPath="[in_StrQueueFolder]" sap:VirtualizedContainerService.HintSize="433.6,143.2" sap2010:WorkflowViewState.IdRef="GetQueueItems_2" QueueItemStates="New" QueueName="[in_StrQueueName]" Result="[vQueueTransactionItem]">
            <ui:GetQueueItems.Duration>
              <InArgument x:TypeArguments="s:Nullable(x:Int32)" />
            </ui:GetQueueItems.Duration>
            <ui:GetQueueItems.From>
              <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
            </ui:GetQueueItems.From>
            <ui:GetQueueItems.Reference>
              <InArgument x:TypeArguments="x:String" />
            </ui:GetQueueItems.Reference>
            <ui:GetQueueItems.Skip>
              <InArgument x:TypeArguments="x:Int32" />
            </ui:GetQueueItems.Skip>
            <ui:GetQueueItems.TimeoutMS>
              <InArgument x:TypeArguments="x:Int32" />
            </ui:GetQueueItems.TimeoutMS>
            <ui:GetQueueItems.To>
              <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
            </ui:GetQueueItems.To>
            <ui:GetQueueItems.Top>
              <InArgument x:TypeArguments="x:Int32" />
            </ui:GetQueueItems.Top>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:GetQueueItems>
          <If Condition="[vQueueTransactionItem.count=0]" DisplayName="If-Cuando sea 0 no borramos la cola" sap:VirtualizedContainerService.HintSize="433.6,500.8" sap2010:WorkflowViewState.IdRef="If_2">
            <If.Then>
              <Sequence DisplayName="" sap:VirtualizedContainerService.HintSize="300,82.4" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="300,235.2" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:DeleteQueueItems DisplayName="Delete Queue Items" FolderPath="[in_StrQueueFolder]" sap:VirtualizedContainerService.HintSize="256.8,52.8" sap2010:WorkflowViewState.IdRef="DeleteQueueItems_2" QueueItems="[vQueueTransactionItem]">
                  <ui:DeleteQueueItems.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:DeleteQueueItems.TimeoutMS>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:DeleteQueueItems>
                <ui:GetQueueItems Priority="{x:Null}" DisplayName="Get Queue Items" FilterStrategy="StartsWith" FolderPath="[in_StrQueueFolder]" sap:VirtualizedContainerService.HintSize="256.8,52.8" sap2010:WorkflowViewState.IdRef="GetQueueItems_3" QueueItemStates="New" QueueName="[in_StrQueueName]" Result="[vQueueTransactionItem]">
                  <ui:GetQueueItems.Duration>
                    <InArgument x:TypeArguments="s:Nullable(x:Int32)" />
                  </ui:GetQueueItems.Duration>
                  <ui:GetQueueItems.From>
                    <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
                  </ui:GetQueueItems.From>
                  <ui:GetQueueItems.Reference>
                    <InArgument x:TypeArguments="x:String" />
                  </ui:GetQueueItems.Reference>
                  <ui:GetQueueItems.Skip>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:GetQueueItems.Skip>
                  <ui:GetQueueItems.TimeoutMS>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:GetQueueItems.TimeoutMS>
                  <ui:GetQueueItems.To>
                    <InArgument x:TypeArguments="s:Nullable(s:DateTime)" />
                  </ui:GetQueueItems.To>
                  <ui:GetQueueItems.Top>
                    <InArgument x:TypeArguments="x:Int32" />
                  </ui:GetQueueItems.Top>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:GetQueueItems>
              </Sequence>
            </If.Else>
          </If>
        </Sequence>
      </ui:InterruptibleDoWhile.Body>
    </ui:InterruptibleDoWhile>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="531.2,108.8" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Trace" Message="[&quot;END - Comp_CleanQueue&quot;]" />
  </Sequence>
</Activity>